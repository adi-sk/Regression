setwd("~/Documents/Machine_learning/practice/Regression/polynomial_linear_regression")
dataset = read.csv('polynomial_regression_Position_Salaries.csv')
View(dataset)
View(dataset)
dataset = dataset[2:3] #index in r starts from '1'
View(dataset)
dataset = read.csv('polynomial_regression_Position_Salaries.csv')
dataset = dataset[1:5,2:3] #index in r starts from '1'
View(dataset)
# Importing the dataset
dataset = read.csv('polynomial_regression_Position_Salaries.csv')
dataset = dataset[2:3] #index in r starts from '1'
library("caTools", lib.loc="/usr/local/lib/R/site-library")
View(dataset)
lin_reg = lm(formula = Salary ~ Level,
data = dataset)
summary(lin_reg)
dataset$Level2 = dataset$Level^2  # this is a polynomial feature or we can say we are adding one extra column here which is the power 2 of Level
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
View(dataset)
View(dataset)
summary(poly_reg)
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
library("ggplot2", lib.loc="/usr/local/lib/R/site-library")
ggplot()+
geom_point(aes(x= dataset$Level , y = dataset$Salary),
color = 'red')+
geom_line(aes(x= dataset$Level , y = predict(lin_reg,newdata = dataset)),
color = 'blue')+
ggtitle('truth or bluff (Linear Regression)')+
xlab('Level')+
ylab('Salary')
ggplot()+
geom_point(aes(x= dataset$Level , y = dataset$Salary),
color = 'red')+
geom_line(aes(x= dataset$Level , y = predict(poly_reg,newdata = dataset)),
color = 'blue')+
ggtitle('truth or bluff (Polynomial Regression)')+
xlab('Level')+
ylab('Salary')
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ . ,
data = dataset)
ggplot()+
geom_point(aes(x= dataset$Level , y = dataset$Salary),
color = 'red')+
geom_line(aes(x= dataset$Level , y = predict(poly_reg,newdata = dataset)),
color = 'blue')+
ggtitle('truth or bluff (Polynomial Regression)')+
xlab('Level')+
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
x_grid
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4
Level5 = x_grid^5))),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4,
Level5 = x_grid^5))),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3))),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
predict(lin_reg,newdata = 6.5)
data$Level = 6.5
data$Level2 = data$Level^2
data$Level3 = data$Level^3
data$Level4 = data$Level^4
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
y_pred = predict(lin_reg,data.frame(Level = 6.5))
y_pred
y_pred = predict(lin_reg,data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred
y_pred = predict(poly_reg,data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred
